ALTER TABLE DEV_XFS_PROPERTISE ADD COLUMN UKR_EXIST CHAR(1) DEFAULT NULL;
ALTER TABLE DEV_XFS_PROPERTISE ADD COLUMN UKD_EXIST CHAR(1) DEFAULT NULL;

ALTER TABLE DEV_XFS_STATUS ADD COLUMN UKR_STATUS VARCHAR(15) DEFAULT NULL;
ALTER TABLE DEV_XFS_STATUS ADD COLUMN UKR_CODE VARCHAR(20) DEFAULT NULL;
ALTER TABLE DEV_XFS_STATUS ADD COLUMN UKD_STATUS VARCHAR(15) DEFAULT NULL;
ALTER TABLE DEV_XFS_STATUS ADD COLUMN UKD_CODE VARCHAR(20) DEFAULT NULL;
INSERT INTO DEV_MODULE(ID,NAME,MOD_NO,NOTE,IS_CASE) VALUES ('160', 'UKD', '0014', '发UKEY模块','1');
INSERT INTO DEV_MODULE(ID,NAME,MOD_NO,NOTE,IS_CASE) VALUES ('170', 'UKR', '0015', '读UKEY模块','1');

CREATE TABLE DEV_CATALOG_SUMMARY_MONTH
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	DEV_CATALOG VARCHAR(40) NOT NULL,
	DEV_NUM INT(11) DEFAULT NULL,
	SUMMARY_DATE VARCHAR(12) NOT NULL,
	ADD_NUM INT(11) DEFAULT NULL,
	SCRAPPED_NUM INT(11) DEFAULT NULL,
	ALL_NEW INT(11) DEFAULT NULL,
	ALL_SCRAPPED INT(11) DEFAULT NULL,
	PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE DEV_CATALOG_SUMMARY_WEEK
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	DEV_CATALOG VARCHAR(40) NOT NULL,
	DEV_NUM INT(11) DEFAULT NULL,
	SUMMARY_DATE VARCHAR(12) NOT NULL,
	ADD_NUM INT(11) DEFAULT NULL,
	SCRAPPED_NUM INT(11) DEFAULT NULL,
	ALL_NEW INT(11) DEFAULT NULL,
	ALL_SCRAPPED INT(11) DEFAULT NULL,
	PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE DEV_TYPE_SUMMARY_MONTH
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	DEV_TYPE VARCHAR(40) NOT NULL,
	DEV_NUM INT(11) DEFAULT NULL,
	SUMMARY_DATE VARCHAR(12) NOT NULL,
	ADD_NUM INT(11) DEFAULT NULL,
	SCRAPPED_NUM INT(11) DEFAULT NULL,
	ALL_NEW INT(11) DEFAULT NULL,
	ALL_SCRAPPED INT(11) DEFAULT NULL,
	PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE DEV_TYPE_SUMMARY_WEEK
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	DEV_TYPE VARCHAR(40) NOT NULL,
	DEV_NUM INT(11) DEFAULT NULL,
	SUMMARY_DATE VARCHAR(12) NOT NULL,
	ADD_NUM INT(11) DEFAULT NULL,
	SCRAPPED_NUM INT(11) DEFAULT NULL,
	ALL_NEW INT(11) DEFAULT NULL,
	ALL_SCRAPPED INT(11) DEFAULT NULL,
	PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

update sm_param set PARAM_TYPE='邮箱配置' where id=14 or id=15 or id=16;


CREATE TABLE DEV_BOX_INFO
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	DEVICE_ID BIGINT(20) NOT NULL,
	MAX_ALARM BIGINT(20) DEFAULT 0,
	MIN_ALARM BIGINT(20) DEFAULT 0,
	DEFAULT_CASHIN BIGINT(20) DEFAULT 0,
	DEFAULT_BILL BIGINT(20) DEFAULT 0,
	BOX_CHANGE CHAR(1) DEFAULT '1',
	PRIMARY KEY (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

CREATE TABLE DEV_BOX_DETAIL_INFO
(
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	CASH_ID VARCHAR(40) NOT NULL,
	CURRENCY VARCHAR(40) DEFAULT NULL,
	BILL_VALUE INT(11) DEFAULT 0,
	NUMBER INT(11) DEFAULT 0,
	BOX_TYPE VARCHAR(40) DEFAULT NULL,
	MAXINUM INT(11) DEFAULT 0,
	INIT_COUNT INT(11) DEFAULT 0,
	CASHIN_COUNT INT(11) DEFAULT 0,
	DISPENSER_COUNT INT(11) DEFAULT 0,
	EFFECT CHAR(1) DEFAULT '1',
	DEV_BOX_INFO_ID BIGINT(20) DEFAULT NULL ,
	PRIMARY KEY (ID),
    FOREIGN KEY (DEV_BOX_INFO_ID) REFERENCES DEV_BOX_INFO (ID)
)ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

 CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL ,
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(250) ,
	DATE_VAL DATETIME DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME DATETIME NOT NULL ,
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_STEP_EXECUTION_SEQ);

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_EXECUTION_SEQ);

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_SEQ);


INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON,ICON_CLS) VALUES ('B11', null, 'cashBoxInfo','钞箱信息','B','0','menu-device-servicePlan');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1101', null, 'cashBoxInfoQuery','查询','B11','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1102', null, 'cashBoxInfoUpdate','更改','B11','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1103', null, 'cashBoxInfoSync','同步钞箱信息','B11','1');

INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON,ICON_CLS) VALUES ('B12', null, 'alarmRule','预警规则管','B','0','menu-device-servicePlan');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1201', null, 'alarmRuleSeach','查询','B12','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1202', null, 'alarmRuleUpdate','更改','B12','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON,ICON_CLS) VALUES ('B13', null, 'cashInitPlan','加钞计划','B','0','menu-device-servicePlan');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1301', null, 'cashInitPlanSeach','查询','B13','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1302', null, 'cashInitPlanUpdate','更改','B13','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1303', null, 'cashInitPlanDel','删除','B13','1');
INSERT INTO SM_PERMISSION(PERMISSION_ID,PER_ACTION,CODE,DESCRIPTION,PARENT_ID,IS_BUTTON) VALUES ('B1304', null, 'cashInitPlanAdd','增加','B13','1');


INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B11','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1101','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1102','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1103','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B12','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1201','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1202','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B13','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1301','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1302','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1303','1');
INSERT INTO SM_ROLE_PERMISSION(PERMISSION_ID,ROLE_ID) VALUES ('B1304','1');
